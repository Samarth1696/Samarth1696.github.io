!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("maplibre-gl")):"function"==typeof define&&define.amd?define(["maplibre-gl"],e):"object"==typeof exports?exports.MaplibreGlFlightSimulator=e(require("maplibre-gl")):t.MaplibreGlFlightSimulator=e(t.maplibregl)}(this,(t=>(()=>{"use strict";var e={565:e=>{e.exports=t}},i={};function o(t){var a=i[t];if(void 0!==a)return a.exports;var r=i[t]={exports:{}};return e[t](r,r.exports,o),r.exports}o.d=(t,e)=>{for(var i in e)o.o(e,i)&&!o.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),o.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var a={};o.r(a),o.d(a,{FlightMotionControl:()=>s});var r=o(565);const n=6371008.8;class s{constructor(t={}){this.now="undefined"!=typeof performance&&performance.now?performance.now.bind(performance):Date.now,this._currentState=null,this._previousState=null,this._frameId=null,this._cameraMode={type:"COCKPIT",offset:{x:0,y:-30,z:10},orientation:{heading:0,pitch:0,roll:0}},this._velocitySmoothed={x:0,y:0,z:0},this._angularVelocitySmoothed={heading:0,pitch:0,roll:0},t.initialPosition&&(this._currentState={position:{lat:t.initialPosition.lat,lng:t.initialPosition.lng,altitude:t.initialPosition.altitude},attitude:{heading:0,pitch:0,roll:0},velocity:{groundSpeed:0,verticalSpeed:0},lastUpdateTime:this.now()}),t.cameraMode&&(this._cameraMode=Object.assign(Object.assign({},t.cameraMode),{offset:t.cameraMode.offset||{x:0,y:0,z:0},orientation:t.cameraMode.orientation||{heading:0,pitch:0,roll:0}}))}onAdd(t){return this._map=t,this._container=document.createElement("div"),this._container.className="maplibregl-ctrl",this._map.dragRotate.disable(),this._map.touchZoomRotate.disableRotation(),this._map.keyboard.disable(),this._startUpdate(),this._container}onRemove(){var t;this._stopUpdate(),null===(t=this._container.parentNode)||void 0===t||t.removeChild(this._container),this._map.dragRotate.enable(),this._map.touchZoomRotate.enableRotation(),this._map.keyboard.enable(),this._map=void 0}_startUpdate(){const t=()=>{this._updateCameraFromState(),this._frameId=requestAnimationFrame(t)};this._frameId=requestAnimationFrame(t)}_stopUpdate(){this._frameId&&(cancelAnimationFrame(this._frameId),this._frameId=null)}updateFlightState(t){var e,i,o;const a=this.now(),r=this._currentState?(a-this._currentState.lastUpdateTime)/1e3:0;if(this._previousState=this._currentState,!this._currentState)return void(this._currentState={position:{lat:t.lat||0,lng:t.lng||0,altitude:t.elevation||0},attitude:{heading:t.flightHeading||0,pitch:t.pitchAttitude||0,roll:t.rollAttitude||0},velocity:{groundSpeed:t.groundSpeed||0,verticalSpeed:t.verticalSpeed||0},lastUpdateTime:a});const n={lat:null!==(e=t.lat)&&void 0!==e?e:this._currentState.position.lat,lng:null!==(i=t.lng)&&void 0!==i?i:this._currentState.position.lng,altitude:t.elevation};if(void 0===n.altitude&&void 0!==t.verticalSpeed){const e=t.verticalSpeed*r;n.altitude=Number((this._currentState.position.altitude+e).toFixed(6))}else void 0===n.altitude&&(n.altitude=this._currentState.position.altitude);let s=t.verticalSpeed;void 0===s&&void 0!==t.elevation?s=Number(((n.altitude-this._currentState.position.altitude)/r).toFixed(6)):void 0===s&&(s=this._currentState.velocity.verticalSpeed);let l=t.groundSpeed;if(void 0!==l||void 0===t.lat&&void 0===t.lng)void 0===l&&(l=this._currentState.velocity.groundSpeed);else{const t=111111,e=Number(((n.lng-this._currentState.position.lng)*Math.cos(n.lat*Math.PI/180)*t).toFixed(6)),i=Number(((n.lat-this._currentState.position.lat)*t).toFixed(6));l=Number((Math.sqrt(e*e+i*i)/r).toFixed(6))}let d=t.flightHeading;if(void 0!==d||void 0===t.lat&&void 0===t.lng)void 0===d&&(d=this._currentState.attitude.heading);else{const t=n.lng-this._currentState.position.lng,e=n.lat-this._currentState.position.lat;d=Number(((180*Math.atan2(t,e)/Math.PI+360)%360).toFixed(6))}let h=t.pitchAttitude;void 0===h&&void 0!==s&&void 0!==l?h=Number((180*Math.atan2(s,l)/Math.PI).toFixed(6)):void 0===h&&(h=this._currentState.attitude.pitch);const u=null!==(o=t.rollAttitude)&&void 0!==o?o:this._currentState.attitude.roll;this._currentState={position:{lat:Number(n.lat.toFixed(6)),lng:Number(n.lng.toFixed(6)),altitude:Number(n.altitude.toFixed(6))},attitude:{heading:Number(d.toFixed(6)),pitch:Number(h.toFixed(6)),roll:Number(u.toFixed(6))},velocity:{groundSpeed:Number(l.toFixed(6)),verticalSpeed:Number(s.toFixed(6))},lastUpdateTime:a},this._previousState&&r>0&&this._updateMotionDerivatives(r)}_updateCameraFromState(){if(!this._currentState||!this._map)return;const t=(this.now()-this._currentState.lastUpdateTime)/1e3,e=this._predictCurrentState(t),i=this._calculateCameraPosition(e);if(!i)return;const{camPos:o,camAlt:a,heading:r,pitch:n,roll:s}=i,l=this._map.calculateCameraOptionsFromCameraLngLatAltRotation(o,a,r,n,s);this._map.jumpTo(l)}_predictCurrentState(t){const e=this._currentState,i=111111,o=Number((this._velocitySmoothed.y*t/i).toFixed(6)),a=Number((this._velocitySmoothed.x*t/(i*Math.cos(Number((e.position.lat*Math.PI/180).toFixed(6))))).toFixed(6)),r=Number((this._velocitySmoothed.z*t).toFixed(6)),n=Number((this._angularVelocitySmoothed.heading*t).toFixed(6)),s=Number((this._angularVelocitySmoothed.pitch*t).toFixed(6)),l=Number((this._angularVelocitySmoothed.roll*t).toFixed(6));return{position:{lat:Number((e.position.lat+o).toFixed(6)),lng:Number((e.position.lng+a).toFixed(6)),altitude:Number((e.position.altitude+r).toFixed(6))},attitude:{heading:Number(((e.attitude.heading+n+360)%360).toFixed(6)),pitch:Number((e.attitude.pitch+s).toFixed(6)),roll:Number((e.attitude.roll+l).toFixed(6))},velocity:{groundSpeed:Number(e.velocity.groundSpeed.toFixed(6)),verticalSpeed:Number(e.velocity.verticalSpeed.toFixed(6))},lastUpdateTime:e.lastUpdateTime}}_calculateCameraPosition(t=this._currentState){if(!this._currentState)return null;const e=this._cameraMode;let i,o,a,n,s;const l=t=>90-Math.max(-90,Math.min(90,t));switch(e.type){case"COCKPIT":i=new r.LngLat(t.position.lng,t.position.lat),o=t.position.altitude+e.offset.z,a=t.attitude.heading,n=l(t.attitude.pitch),s=t.attitude.roll;break;case"CHASE":const d=this._calculateChaseOffset(e.offset);i=this._offsetPosition(t.position.lat,t.position.lng,t.attitude.heading,d.x,d.y),o=t.position.altitude+d.z,a=t.attitude.heading,n=l(.5*t.attitude.pitch),s=.5*t.attitude.roll;break;case"ORBIT":const h=this.now()%3e4/3e4*Math.PI*2,u=Math.sqrt(e.offset.y*e.offset.y+e.offset.x*e.offset.x),c=Math.cos(h)*u,m=Math.sin(h)*u;i=this._offsetPosition(t.position.lat,t.position.lng,0,c,m),o=t.position.altitude+e.offset.z,a=this._calculateHeadingToPoint(i.lat,i.lng,t.position.lat,t.position.lng),n=this._calculatePitchToPoint(i.lat,i.lng,o,t.position.lat,t.position.lng,t.position.altitude),s=0;break;case"FREE":i=new r.LngLat(t.position.lng,t.position.lat),o=t.position.altitude,a=e.orientation.heading,n=e.orientation.pitch,s=e.orientation.roll}return{camPos:i,camAlt:o,heading:a,pitch:n,roll:s}}_offsetPosition(t,e,i,o,a){const s=(i-90)*Math.PI/180,l=n,d=Math.atan2(a,o),h=Math.sqrt(o*o+a*a),u=t*Math.PI/180,c=e*Math.PI/180,m=s+d,p=Math.asin(Math.sin(u)*Math.cos(h/l)+Math.cos(u)*Math.sin(h/l)*Math.cos(m)),_=c+Math.atan2(Math.sin(m)*Math.sin(h/l)*Math.cos(u),Math.cos(h/l)-Math.sin(u)*Math.sin(p));return new r.LngLat(180*_/Math.PI,180*p/Math.PI)}_updateMotionDerivatives(t){if(!this._previousState||!this._currentState)return;const e=this._previousState,i=this._currentState,o=111111,a=Number(Math.cos(i.position.lat*Math.PI/180).toFixed(6)),r=Number(((i.position.lng-e.position.lng)*a*o).toFixed(6)),n=Number(((i.position.lat-e.position.lat)*o).toFixed(6)),s=Number((i.position.altitude-e.position.altitude).toFixed(6)),l=Number((r/t).toFixed(6)),d=Number((n/t).toFixed(6)),h=Number((s/t).toFixed(6)),u=Number(this._shortestAngleDifference(e.attitude.heading,i.attitude.heading).toFixed(6)),c=Number((i.attitude.pitch-e.attitude.pitch).toFixed(6)),m=Number((i.attitude.roll-e.attitude.roll).toFixed(6)),p=Number((u/t).toFixed(6)),_=Number((c/t).toFixed(6)),g=Number((m/t).toFixed(6)),S=.3;this._velocitySmoothed.x=Number((this._velocitySmoothed.x+(l-this._velocitySmoothed.x)*S).toFixed(6)),this._velocitySmoothed.y=Number((this._velocitySmoothed.y+(d-this._velocitySmoothed.y)*S).toFixed(6)),this._velocitySmoothed.z=Number((this._velocitySmoothed.z+(h-this._velocitySmoothed.z)*S).toFixed(6)),this._angularVelocitySmoothed.heading=Number((this._angularVelocitySmoothed.heading+(p-this._angularVelocitySmoothed.heading)*S).toFixed(6)),this._angularVelocitySmoothed.pitch=Number((this._angularVelocitySmoothed.pitch+(_-this._angularVelocitySmoothed.pitch)*S).toFixed(6)),this._angularVelocitySmoothed.roll=Number((this._angularVelocitySmoothed.roll+(g-this._angularVelocitySmoothed.roll)*S).toFixed(6))}_calculateChaseOffset(t){if(!this._currentState)return t;const e=this._currentState.velocity.groundSpeed,i=Math.min(e/100,1);return{x:t.x,y:t.y*(1+.5*i),z:t.z*(1+.3*i)}}_calculateHeadingToPoint(t,e,i,o){const a=(o-e)*Math.PI/180,r=t*Math.PI/180,n=i*Math.PI/180,s=Math.sin(a)*Math.cos(n),l=Math.cos(r)*Math.sin(n)-Math.sin(r)*Math.cos(n)*Math.cos(a);return(180*Math.atan2(s,l)/Math.PI+360)%360}_calculatePitchToPoint(t,e,i,o,a,r){const s=n,l=(o-t)*Math.PI/180,d=(a-e)*Math.PI/180,h=Math.sin(l/2)*Math.sin(l/2)+Math.cos(t*Math.PI/180)*Math.cos(o*Math.PI/180)*Math.sin(d/2)*Math.sin(d/2),u=s*(2*Math.atan2(Math.sqrt(h),Math.sqrt(1-h))),c=r-i;return 180*-Math.atan2(c,u)/Math.PI}_shortestAngleDifference(t,e){let i=Number((e-t).toFixed(6));for(;i>180;)i=Number((i-360).toFixed(6));for(;i<-180;)i=Number((i+360).toFixed(6));return i}setCameraMode(t){this._cameraMode=Object.assign(Object.assign({},t),{offset:t.offset||{x:0,y:0,z:0},orientation:t.orientation||{heading:0,pitch:0,roll:0}}),"CHASE"!==t.type||t.offset?"ORBIT"!==t.type||t.offset||(this._cameraMode.offset={x:0,y:-100,z:50}):this._cameraMode.offset={x:0,y:-30,z:10},this._currentState&&this._updateCameraFromState()}getState(){return this._currentState?Object.assign({},this._currentState):null}}return a})()));